1. Scenario:

Imagine you are designing a database for a university that manages courses and student enrollments. Each course can have multiple students enrolled, and each student can enroll in multiple courses. You need to create a schema that includes tables for courses and students, with a mechanism to track enrollments.

SQL Question:

Create a MySQL schema to manage this scenario with the following requirements:

A courses table with:

course_id as the primary key.
course_name to store the name of the course.
instructor to store the name of the course instructor.
A students table with:

student_id as the primary key.
student_name to store the name of the student.
student_email to store the email address of the student.
An enrollments table to manage the many-to-many relationship between courses and students:

enrollment_id as the primary key.
course_id as a foreign key referencing courses(course_id).
student_id as a foreign key referencing students(student_id).
enrollment_date to store the date when the student enrolled in the course.

2. Scenario:

You are working for an e-commerce platform where customers can place orders. Each order has a total amount. The company wants to analyze overall sales performance by calculating some aggregate values across all orders in the system.

SQL Question:

Create a MySQL schema for managing customer orders with the following requirements:

An orders table with:
order_id as the primary key.
customer_name to store the name of the customer.
order_date to store the date when the order was placed.
total_amount to store the total amount of the order.

Once the table is created, write SQL queries to calculate the following:

The total revenue generated by all orders.
The average order value.
The maximum and minimum order amounts.
The total number of orders placed.

3. Scenario:

Imagine you are managing a retail store's database. The store keeps track of sales transactions, and you want to analyze the total sales amount for each product. Additionally, you want to identify which products have generated total sales above a certain threshold.

SQL Question:

Create a MySQL query that does the following:

Create a sales table with:

sale_id as the primary key.
product_id to store the ID of the product sold.
quantity to store the quantity of the product sold.
sale_amount to store the total sale amount for that transaction.
Write a query to calculate the total sales (SUM(sale_amount)) for each product (product_id) and display only those products where the total sales exceed $500.

4. Create a table with the name orders which includes sno primary key and auto incremant, name not null and ordered_at of time data type should consists of default 2024 January first. Insert three values into the table by taking your own example which matches all the cases.